/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ardaoyan
 */

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.*; 
import java.util.List;
import java.util.stream.Collectors;


public class yazlab extends javax.swing.JFrame {

    /**
     * Creates new form yazlab
     */
    public yazlab() {
        initComponents();
    }
    
    int [][]sudoku = new int [9][9];
    DefaultTableModel model;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 0));
        setForeground(new java.awt.Color(51, 51, 51));
        setMaximumSize(new java.awt.Dimension(1150, 800));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 800));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 778, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 711, Short.MAX_VALUE)
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 102));
        jButton1.setText("Sudoku Aç");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Sudoku Çöz");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("İpucu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    class myThread extends Thread{
        public void run(int x, int y){
            int sayi = sudoku[x][y];
            int x2=0,y2=0;
            int x3=0,y3=0;
            
            List<Integer> sayilarX = new ArrayList<Integer>();
            List<Integer> sayilarY = new ArrayList<Integer>();
            List<Integer> sayilarK = new ArrayList<Integer>();
          
            for (int i = 1; i <=9; i++) {
                sayilarX.add(i); 
                sayilarY.add(i);
                sayilarK.add(i);
              
            }
            //  System.out.println(sayilarX.get(5));
            
           boolean dongu_boz = false;
                      
            for (int i = x; i < 9; i++) {
                for (int j = y; j < 9; j++) {
                    if(sudoku[i][j]==0){
                        x2=i;
                        y2=j;
                        dongu_boz=true;
                        break;
                    }                
                }
                if(dongu_boz)
                    break;
            }
            
            for (int i = 0; i < 9; i++) {
                for (int j = 0; j < 9; j++) {
                    if(sudoku[i][j]==0){
                        x3=i;
                        y3=j;
                        
                    }                
                }
                
            }
            
            
            
           // System.out.println(sayilarK);
            
                     
           // System.out.println(""+x2+", "+y2);
            
            for(int i=0; i<9 ;i++){
                if(sudoku[x][i]!=0){
                   sayilarX.remove(new Integer(sudoku[x][i]));
                }                       
            }
            for(int i=0; i<9 ;i++){
                if(sudoku[i][y2]!=0){
                    
                   sayilarY.remove(new Integer(sudoku[i][y2]));
                }           
            }
            for(int i=0; i<3 ;i++){
                for (int j = 0; j < 3; j++) {
                    if(x2<3 && y2<3){
                        if(sudoku[i][j]!=0){
                            int a = sudoku[i][j];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2<3 && y2<6 && y2>=3){
                        if(sudoku[i][j+3]!=0){
                           int a = sudoku[i][j+3];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2<3 && y2>=6){
                        if(sudoku[i][j+6]!=0){
                           int a = sudoku[i][j+6];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2>=3 && x2<6 && y2<3){
                        if(sudoku[i+3][j]!=0){
                            int a = sudoku[i+3][j];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2>=3 && x2<6 && y2>=3 && y2<6){
                        if(sudoku[i+3][j+3]!=0){
                            int a = sudoku[i+3][j+3];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2>=3 && x2<6 && y2>=6){
                        if(sudoku[i+3][j+6]!=0){
                            int a = sudoku[i+3][j+6];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2>=6 && y2<3){
                        if(sudoku[i+6][j]!=0){
                            int a = sudoku[i+6][j];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2>=6 && y2>=3 && y2<6){
                        if(sudoku[i+6][j]!=0){
                            int a = sudoku[i+6][j+3];
                            sayilarK.remove(new Integer(a));
                        }
                    }
                    if(x2>=6 && y2>=6){
                        if(sudoku[i+6][j]!=0){
                            int a = sudoku[i+6][j+6];
                            sayilarK.remove(new Integer(a));
                        }
                    }   
                    
                }
                       
            }
            
         //  List<Integer> kesim1 = sayilarX.stream().filter(sayilarY::contains).collect(Collectors.toList());
          List<Integer>  kesisim1 = sayilarX.stream().filter(sayilarY::contains).collect(Collectors.toList());
         //   System.out.println(kesisim1);
          List<Integer>  sonuc =kesisim1.stream().filter(sayilarK::contains).collect(Collectors.toList());
            //System.out.println(sayilarK);
          //  System.out.println(sonuc);
               
            
            
            if(x2==x3 && y2==y3){
                return;
            }
            else{
               if(sonuc.size()==1){
               sudoku[x2][y2]=sonuc.get(0);
                   System.out.println(sonuc.get(0));
               }
               else{
                    if(y<8){
                        myThread t = new myThread();
                        t.run(x, y+1);
                    }    
                    else if(x<8 && y==8 ){
                        myThread t = new myThread();
                        t.run(x+1, 0);
                    }
                    else if(x==8 && y==8){
                       
                        myThread t = new myThread();
                        t.run(0, 0);
                    }
                } 
            }
           
     

        }
    }
    
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        

        try {
            File f = new File("sudoku2.txt");
            FileReader fr = new FileReader(f);
            char sudoku_text[] = new char[(int)f.length()];
            char sudoku_text2[]=new char [81]; 
            fr.read(sudoku_text);
            int j=0;
            int asci;
          
            for (int i = 0; i < sudoku_text.length; i++) {                              
                if(sudoku_text[i]=='*'){
                        sudoku_text[i]='0';                   
                }                              
            }
          for (int i = 0 ; i < sudoku_text.length; i++) {
                
                if((int)sudoku_text[i]==13){
                    i=i+2;
                }                     
                sudoku_text2[j]=sudoku_text[i];
                j++;
            }
            //System.out.println((int)sudoku_text2[9]);
            //asci=(int)sudoku_text[9];
            //System.out.print(asci);
          //  System.out.println(sudoku_text2);
            
           //  sudoku[0][0]=(int)sudoku_text2[0]; 
           //  System.out.println(sudoku[0][0]);
           //  System.out.println(sudoku_text2.length);
             
            int l=0;
            for (int i = 0; i < 9; i++) {
                for (int k = 0; k < 9; k++) {
                   sudoku[i][k]=(int)sudoku_text2[l];
                   l++;
                   if(sudoku[i][k]==48){
                       sudoku[i][k]=0;
                   }
                   if(sudoku[i][k]==49){
                       sudoku[i][k]=1;
                   }
                   if(sudoku[i][k]==50){
                       sudoku[i][k]=2;
                   }
                   if(sudoku[i][k]==51){
                       sudoku[i][k]=3;
                   }
                   if(sudoku[i][k]==52){
                       sudoku[i][k]=4;
                   }
                   if(sudoku[i][k]==53){
                       sudoku[i][k]=5;
                   }
                   if(sudoku[i][k]==54){
                       sudoku[i][k]=6;
                   }
                   if(sudoku[i][k]==55){
                       sudoku[i][k]=7;
                   }
                   if(sudoku[i][k]==56){
                       sudoku[i][k]=8;
                   }
                   if(sudoku[i][k]==57){
                       sudoku[i][k]=9;
                   }                  
                }               
            }         
         /*  for (int i = 0; i < 9; i++) {
                for (int k = 0; k < 9; k++) {
                    System.out.print(" "+sudoku[i][k]);                   
                }     
                System.out.println("");
            }*/
                   
        } catch (Exception e) {
            System.out.println("Hata :"+e.getMessage());
        }
    
    Graphics g = getGraphics();
    sudoku_tablo tablo = new sudoku_tablo();
    tablo.bos_tablo(g);
    tablo.string_yaz(g,sudoku);
   
    
          
    }//GEN-LAST:event_jButton1ActionPerformed
 
    
    
    
    
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            
        myThread thread1 = new myThread();
        myThread thread2 = new myThread();
        myThread thread3 = new myThread();
        
        thread1.run(0,0);
       for (int i = 0; i < 9; i++) {
                for (int k = 0; k < 9; k++) {
                    System.out.print(" "+sudoku[i][k]);                   
                }     
                System.out.println("");
            }
        Graphics g = getGraphics();
        sudoku_tablo tablo = new sudoku_tablo();
        tablo.string_yaz(g,sudoku);
      //  thread2.run();
      //  thread3.run();
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(yazlab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(yazlab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(yazlab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(yazlab.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new yazlab().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
